{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8980844,"sourceType":"datasetVersion","datasetId":5407975}],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import pandas as pd\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-07-18T05:37:49.572195Z","iopub.execute_input":"2024-07-18T05:37:49.572620Z","iopub.status.idle":"2024-07-18T05:38:04.489390Z","shell.execute_reply.started":"2024-07-18T05:37:49.572583Z","shell.execute_reply":"2024-07-18T05:38:04.487928Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stderr","text":"2024-07-18 05:37:52.952749: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-07-18 05:37:52.952937: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-07-18 05:37:53.113177: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n","output_type":"stream"}]},{"cell_type":"code","source":"# load data\ndata = pd.read_csv('/kaggle/input/digit-recognizer-dataset/train.csv')\nX = data.drop('label', axis=1)\nX = tf.convert_to_tensor(X)\n\ny = data.label\ny = tf.convert_to_tensor(y)\n\n# split data\nX_train, X_valid = X[:30000], X[30000:]\ny_train, y_valid = y[:30000], y[30000:]\n\n# reshape data\nX_train = tf.reshape(X_train, [30000, 28, 28, 1])\nX_valid = tf.reshape(X_valid, [12000, 28, 28, 1])","metadata":{"execution":{"iopub.status.busy":"2024-07-18T05:41:20.231084Z","iopub.execute_input":"2024-07-18T05:41:20.232209Z","iopub.status.idle":"2024-07-18T05:41:24.819515Z","shell.execute_reply.started":"2024-07-18T05:41:20.232160Z","shell.execute_reply":"2024-07-18T05:41:24.817842Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"# iteration 1: basic model\ndef build_model1(X_train, X_valid, y_train, y_valid):\n    model = keras.Sequential([\n        layers.Conv2D(filters=32, kernel_size=3, activation='relu', input_shape=[28, 28, 1]),\n        layers.Conv2D(filters=64, kernel_size=3, activation='relu'),\n        layers.Flatten(),\n        layers.Dense(units=64, activation='relu'),\n        layers.Dense(units=10, activation='softmax')\n    ])\n\n    model.compile(\n        optimizer='adam',\n        loss='sparse_categorical_crossentropy',\n        metrics=['accuracy']\n    )\n\n    history = model.fit(x=X_train, y=y_train, epochs=1, validation_data=(X_valid, y_valid), verbose=1)\n    history_frame = pd.DataFrame(history.history)\n    history_frame.loc[:, ['loss', 'val_loss']].plot()\n    history_frame.loc[:, ['accuracy', 'val_accuracy']].plot()\n    return model\n","metadata":{"execution":{"iopub.status.busy":"2024-07-18T05:41:38.137661Z","iopub.execute_input":"2024-07-18T05:41:38.138119Z","iopub.status.idle":"2024-07-18T05:41:38.148575Z","shell.execute_reply.started":"2024-07-18T05:41:38.138080Z","shell.execute_reply":"2024-07-18T05:41:38.146892Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"code","source":"model1 = build_model1(X_train, X_valid, y_train, y_valid)","metadata":{"execution":{"iopub.status.busy":"2024-07-18T05:41:43.679314Z","iopub.execute_input":"2024-07-18T05:41:43.679809Z","iopub.status.idle":"2024-07-18T05:43:08.166364Z","shell.execute_reply.started":"2024-07-18T05:41:43.679771Z","shell.execute_reply":"2024-07-18T05:43:08.164890Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/convolutional/base_conv.py:107: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m938/938\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m51s\u001b[0m 52ms/step - accuracy: 0.8229 - loss: 5.4754 - val_accuracy: 0.9654 - val_loss: 0.1106\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]}]}